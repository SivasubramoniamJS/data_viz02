{"version":3,"sources":["useData.js","BubbleMap/Marks.js","BubbleMap/index.js","DateHistogram/AxisBottom.js","DateHistogram/AxisLeft.js","DateHistogram/Marks.js","DateHistogram/index.js","DateHistogram1/AxisBottom.js","DateHistogram1/AxisLeft.js","DateHistogram1/Marks.js","DateHistogram1/index.js","firebase.js","index.js","useWorldAtlas.js"],"names":["row","d","coords","split","map","reverse","Date","projection","geoNaturalEarth1","path","geoPath","graticule","geoGraticule","HtmlTooltip","withStyles","theme","tooltip","backgroundColor","color","maxWidth","fontSize","typography","pxToRem","border","Tooltip","HtmlTooltip2","Marks","worldAtlas","land","interiors","data","sizeScale","country","sizeValue","className","type","features","feature","x","y","total","repdate","String","title","Fragment","Typography","variant","display","gutterBottom","cx","cy","r","BubbleMap","scaleSqrt","domain","max","range","AxisBottom","xScale","innerHeight","tickFormat","tickOffset","ticks","tickValue","transform","y2","style","textAnchor","dy","AxisLeft","yScale","innerWidth","x2","binnedData","tooltipFormat","x0","width","x1","height","margin","DateHistogram","setBrushExtent","xValue","yValue","xAxisTickFormat","timeFormat","scaleTime","extent","nice","start","stop","bin","value","thresholds","timeMonths","array","sum","scaleLinear","brushRef","useRef","useState","defaultExtent","useEffect","brush","brushX","select","current","on","event","selection","invert","sourceEvent","transition","delay","duration","call","move","fill","circleRadius","ref","DateHistogram1","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","App","classes","makeStyles","root","marginTop","spacing","useStyles","check","setCheck","setRate","name","href","items","setData","json","then","topology","objects","countries","mesh","a","b","useWorldAtlas","csv","useData","brushExtent","top","left","bottom","right","state","setState","LinearProgress","paddingTop","filteredData","filter","date","anchor","abc","toggleDrawer","open","key","onunload","alert","dateHistogramSize","IconButton","aria-label","onClick","edge","Avatar","alt","src","Switch","checked","onChange","inputProps","TextField","id","label","placeholder","multiline","rows","e","i","document","getElementsByClassName","Button","preventDefault","collection","add","displayName","username","verified","SwipeableDrawer","onClose","onOpen","Divider","rootElement","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.69eacc83.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { csv } from 'd3';\r\n\r\nconst csvUrl =\r\n  'https://raw.githubusercontent.com/SivasubramoniamJS/D3_Project_1/main/Updated%20Data.csv';\r\n\r\nconst row = d => {\r\n  d.coords = d['Location Coordinates'].split(',').map(d => +d).reverse();\r\n  d['Total Dead and Missing'] = + d['Total Dead and Missing'];\r\n  d['Reported Date'] = new Date(d['Reported Date']);\r\n  return d;\r\n};\r\n\r\nexport const useData = () => {\r\n  const [data, setData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    csv(csvUrl, row).then(setData);\r\n  }, []);\r\n\r\n  return data;\r\n};\r\n","import React from 'react';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport { geoNaturalEarth1, geoPath, geoGraticule, tree } from 'd3';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nconst projection = geoNaturalEarth1();\r\nconst path = geoPath(projection);\r\nconst graticule = geoGraticule();\r\n\r\nconst HtmlTooltip = withStyles((theme) => ({\r\n  tooltip: {\r\n    backgroundColor: '#f5f5f9',\r\n    color: 'red',\r\n    maxWidth: 420,\r\n    fontSize: theme.typography.pxToRem(12),\r\n    border: '1px solid #dadde9',\r\n  },\r\n}))(Tooltip);\r\n\r\nconst HtmlTooltip2 = withStyles((theme) => ({\r\n  tooltip: {\r\n    backgroundColor: '#f5f5f9',\r\n    color: 'green',\r\n    maxWidth: 420,\r\n    fontSize: theme.typography.pxToRem(12),\r\n    border: '1px solid #dadde9',\r\n  },\r\n}))(Tooltip);\r\n\r\nconst HtmlTooltip3 = withStyles((theme) => ({\r\n  tooltip: {\r\n    backgroundColor: '#f5f5f9',\r\n    color: 'blue',\r\n    maxWidth: 420,\r\n    fontSize: theme.typography.pxToRem(12),\r\n    border: '1px solid #dadde9',\r\n  },\r\n}))(Tooltip);\r\n\r\nexport const Marks = ({\r\n  worldAtlas: { land, interiors },\r\n  data,\r\n  country,\r\n  sizeScale,\r\n  sizeValue\r\n}) => (\r\n  <g className=\"marks\">\r\n    <path className=\"sphere\" d={path({ type: 'Sphere' })} />\r\n    <path className=\"graticules\" d={path(graticule())} />\r\n    {land.features.map(feature => (\r\n      <path className=\"land\" d={path(feature)} />\r\n    ))}\r\n    <path className=\"interiors\" d={path(interiors)} />\r\n    {data.map(d => {\r\n      const [x, y] = projection(d.coords);\r\n      const country = d.['Country'];\r\n      const total = d['Total Dead and Missing'];\r\n      const repdate = String(d.['Reported Date']);\r\n      if(total < 50){\r\n      return (        \r\n        <HtmlTooltip\r\n        title={\r\n          <React.Fragment>\r\n          <Typography color=\"red\"><u>Android Users</u></Typography>\r\n          <Typography  variant=\"caption\" display=\"block\" gutterBottom>Country : {country}</Typography>\r\n          <Typography  variant=\"caption\" display=\"block\" gutterBottom>Decreased By : {total}%</Typography>\r\n          Reported at :   {repdate}\r\n          </React.Fragment>\r\n        }\r\n      >\r\n      <circle cx={x} cy={y} r={sizeScale(sizeValue(d))} />\r\n      </HtmlTooltip>\r\n      );\r\n      }\r\n      else{\r\n        return (        \r\n          <HtmlTooltip2\r\n          title={\r\n            <React.Fragment>\r\n            <Typography color=\"red\"><u>Android Users</u></Typography>\r\n            <Typography  variant=\"caption\" display=\"block\" gutterBottom>Country : {country}</Typography>\r\n            <Typography  variant=\"caption\" display=\"block\" gutterBottom>Increased By : {total}%</Typography>\r\n            Reported at :   {repdate}\r\n            </React.Fragment>\r\n          }\r\n        >\r\n        <circle cx={x} cy={y} r={sizeScale(sizeValue(d))} />\r\n        </HtmlTooltip2>\r\n        );\r\n      }\r\n\r\n    })}\r\n  </g>\r\n);\r\n","import React from 'react';\r\nimport { scaleSqrt, max } from 'd3';\r\nimport { Marks } from './Marks';\r\n\r\nconst sizeValue = d => d['Total Dead and Missing'];\r\n\r\nexport const BubbleMap = ({ data, worldAtlas }) => {\r\n  const maxRadius = 15;\r\n\r\n  const sizeScale = scaleSqrt()\r\n    .domain([0, max(data, sizeValue)])\r\n    .range([0, maxRadius]);\r\n\r\n  return (\r\n    <Marks\r\n      worldAtlas={worldAtlas}\r\n      data={data}\r\n      sizeScale={sizeScale}\r\n      sizeValue={sizeValue}\r\n    />\r\n  );\r\n};\r\n","export const AxisBottom = ({ xScale, innerHeight, tickFormat, tickOffset = 3 }) =>\r\n  xScale.ticks().map(tickValue => (\r\n    <g\r\n      className=\"tick\"\r\n      key={tickValue}\r\n      transform={`translate(${xScale(tickValue)},0)`}\r\n    >\r\n      <line y2={innerHeight} />\r\n      <text style={{ textAnchor: 'middle' }} dy=\".71em\" y={innerHeight + tickOffset}>\r\n        {tickFormat(tickValue)}\r\n      </text>\r\n    </g>\r\n  ));\r\n","export const AxisLeft = ({ yScale, innerWidth, tickOffset = 3 }) =>\r\n  yScale.ticks().map(tickValue => (\r\n    <g className=\"tick\" transform={`translate(0,${yScale(tickValue)})`}>\r\n      <line x2={innerWidth} />\r\n      <text\r\n        key={tickValue}\r\n        style={{ textAnchor: 'end' }}\r\n        x={-tickOffset}\r\n        dy=\".32em\"\r\n      >\r\n        {tickValue}\r\n      </text>\r\n    </g>\r\n  ));\r\n","export const Marks = ({\r\n  binnedData,\r\n  xScale,\r\n  yScale,\r\n  tooltipFormat,\r\n  innerHeight\r\n}) =>\r\n  binnedData.map(d => (\r\n    <rect\r\n      className=\"mark\"\r\n      x={xScale(d.x0)}\r\n      y={yScale(d.y)}\r\n      width={xScale(d.x1) - xScale(d.x0)}\r\n      height={innerHeight - yScale(d.y)}\r\n    >\r\n      <title>{tooltipFormat(xScale(d))}</title>\r\n    </rect>\r\n  ));\r\n","import {\r\n  scaleLinear,\r\n  scaleTime,\r\n  max,\r\n  timeFormat,\r\n  extent,\r\n  histogram as bin,\r\n  timeMonths,\r\n  sum,\r\n  brushX,\r\n  select\r\n} from 'd3';\r\n\r\nimport { useRef, useEffect,useState } from 'react';\r\nimport { AxisBottom } from './AxisBottom';\r\nimport { AxisLeft } from './AxisLeft';\r\nimport { Marks } from './Marks';\r\n\r\nconst margin = { top: 30, right: 30, bottom: 20, left: 45 };\r\nconst xAxisLabelOffset = 54;\r\nconst yAxisLabelOffset = 30;\r\n\r\nexport const DateHistogram = ({\r\n  data,\r\n  width,\r\n  height,\r\n  setBrushExtent,\r\n  xValue\r\n}) => {\r\n  const xAxisLabel = 'Time';\r\n\r\n  const yValue = d => d['Total Dead and Missing'];\r\n  const yAxisLabel = 'Total Energy Supplied';\r\n\r\n  const innerHeight = height - margin.top - margin.bottom;\r\n  const innerWidth = width - margin.left - margin.right;\r\n\r\n  const xAxisTickFormat = timeFormat('%Y');\r\n\r\n  const xScale = scaleTime()\r\n    .domain(extent(data, xValue))\r\n    .range([0, innerWidth])\r\n    .nice();\r\n\r\n  const [start, stop] = xScale.domain();\r\n\r\n  const binnedData = bin()\r\n    .value(xValue)\r\n    .domain(xScale.domain())\r\n    .thresholds(timeMonths(start, stop))(data)\r\n    .map(array => ({\r\n      y: sum(array, yValue),\r\n      x0: array.x0,\r\n      x1: array.x1\r\n    }));\r\n\r\n  const yScale = scaleLinear()\r\n    .domain([0, max(binnedData, d => d.y)])\r\n    .range([innerHeight, 0]);\r\n  const brushRef = useRef();\r\n  const [defaultExtent,setDefaultExtent] = useState([innerWidth-20, innerWidth]);\r\n  useEffect(() => {\r\n    const brush = brushX().extent([[0, 0], [innerWidth, innerHeight]]);\r\n    brush(select(brushRef.current));\r\n    brush.on('start brush', (event) => {\r\n      setBrushExtent(event.selection && event.selection.map(xScale.invert));\r\n   }).on(\"end\", brushended);\r\n   function brushended({sourceEvent, selection}) {\r\n    if (!sourceEvent) return; // Only transition after interaction.\r\n    select(brushRef.current).transition()\r\n        .delay(0)\r\n        .duration(5000)\r\n        .call(brush.move, defaultExtent);\r\n  }\r\n  }, [innerWidth, innerHeight]);\r\n\r\n  return (\r\n    <>\r\n      <rect width={width} height={height} fill=\"white\" />\r\n      <g transform={`translate(${margin.left},${margin.top})`}>\r\n        <AxisBottom\r\n          xScale={xScale}\r\n          innerHeight={innerHeight}\r\n          tickFormat={xAxisTickFormat}\r\n          tickOffset={5}\r\n        />\r\n        <text\r\n          className=\"axis-label\"\r\n          textAnchor=\"middle\"\r\n          transform={`translate(${-yAxisLabelOffset},${innerHeight /\r\n            2}) rotate(-90)`}\r\n        >\r\n          {yAxisLabel}\r\n        </text>\r\n        <AxisLeft yScale={yScale} innerWidth={innerWidth} tickOffset={5} />\r\n        <text\r\n          className=\"axis-label\"\r\n          x={innerWidth / 2}\r\n          y={innerHeight + xAxisLabelOffset}\r\n          textAnchor=\"middle\"\r\n        >\r\n          {xAxisLabel}\r\n        </text>\r\n        <Marks\r\n          binnedData={binnedData}\r\n          xScale={xScale}\r\n          yScale={yScale}\r\n          tooltipFormat={d => d}\r\n          circleRadius={2}\r\n          innerHeight={innerHeight}\r\n        />\r\n        <g ref={brushRef} />\r\n      </g>\r\n    </>\r\n  );\r\n};\r\n","export const AxisBottom = ({ xScale, innerHeight, tickFormat, tickOffset = 3 }) =>\r\n  xScale.ticks().map(tickValue => (\r\n    <g\r\n      className=\"tick\"\r\n      key={tickValue}\r\n      transform={`translate(${xScale(tickValue)},0)`}\r\n    >\r\n      <line y2={innerHeight} />\r\n      <text style={{ textAnchor: 'middle' }} dy=\".71em\" y={innerHeight + tickOffset}>\r\n        {tickFormat(tickValue)}\r\n      </text>\r\n    </g>\r\n  ));\r\n","export const AxisLeft = ({ yScale, innerWidth, tickOffset = 3 }) =>\r\n  yScale.ticks().map(tickValue => (\r\n    <g className=\"tick\" transform={`translate(0,${yScale(tickValue)})`}>\r\n      <line x2={innerWidth} />\r\n      <text\r\n        key={tickValue}\r\n        style={{ textAnchor: 'end' }}\r\n        x={-tickOffset}\r\n        dy=\".32em\"\r\n      >\r\n        {tickValue}\r\n      </text>\r\n    </g>\r\n  ));\r\n","export const Marks = ({\r\n  binnedData,\r\n  xScale,\r\n  yScale,\r\n  tooltipFormat,\r\n  innerHeight\r\n}) =>\r\n  binnedData.map(d => (\r\n    <rect\r\n      className=\"mark1\"\r\n      x={xScale(d.x0)}\r\n      y={yScale(d.y)}\r\n      width={xScale(d.x1) - xScale(d.x0)}\r\n      height={innerHeight - yScale(d.y)}\r\n    >\r\n      <title>{tooltipFormat(xScale(d))}</title>\r\n    </rect>\r\n  ));\r\n","import {\r\n  scaleLinear,\r\n  scaleTime,\r\n  max,\r\n  timeFormat,\r\n  extent,\r\n  histogram as bin,\r\n  timeMonths,\r\n  sum,\r\n  brushX,\r\n  select\r\n} from 'd3';\r\n\r\n\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport { useRef, useEffect,useState } from 'react';\r\nimport { AxisBottom } from './AxisBottom';\r\nimport { AxisLeft } from './AxisLeft';\r\nimport { Marks } from './Marks';\r\n\r\nconst margin = { top: 30, right: 30, bottom: 20, left: 45 };\r\nconst xAxisLabelOffset = 54;\r\nconst yAxisLabelOffset = 30;\r\n\r\nexport const DateHistogram1 = ({\r\n  data,\r\n  width,\r\n  height,\r\n  setBrushExtent,\r\n  xValue\r\n}) => {\r\n  const xAxisLabel = 'Time';\r\n\r\n  const yValue = d => d['Total Dead and Missing'];\r\n  const yAxisLabel = 'Total Energy Supplied';\r\n\r\n  const innerHeight = height - margin.top - margin.bottom;\r\n  const innerWidth = width - margin.left - margin.right;\r\n\r\n  const xAxisTickFormat = timeFormat('%Y');\r\n\r\n  const xScale = scaleTime()\r\n    .domain(extent(data, xValue))\r\n    .range([0, innerWidth])\r\n    .nice();\r\n\r\n  const [start, stop] = xScale.domain();\r\n\r\n  const binnedData = bin()\r\n    .value(xValue)\r\n    .domain(xScale.domain())\r\n    .thresholds(timeMonths(start, stop))(data)\r\n    .map(array => ({\r\n      y: sum(array, yValue),\r\n      x0: array.x0,\r\n      x1: array.x1\r\n    }));\r\n\r\n  const yScale = scaleLinear()\r\n    .domain([0, max(binnedData, d => d.y)])\r\n    .range([innerHeight, 0]);\r\n  const brushRef = useRef();\r\n  const [defaultExtent,setDefaultExtent] = useState([innerWidth-20, innerWidth]);\r\n  useEffect(() => {\r\n    const brush = brushX().extent([[0, 0], [innerWidth, innerHeight]]);\r\n    brush(select(brushRef.current));\r\n    brush.on('start brush', (event) => {\r\n      setBrushExtent(event.selection && event.selection.map(xScale.invert));\r\n   })\r\n  }, [innerWidth, innerHeight]);\r\n\r\n  return (\r\n    <>\r\n      <rect width={width} height={height} fill=\"white\" />\r\n      <g transform={`translate(${margin.left},${margin.top})`}>\r\n        <AxisBottom\r\n          xScale={xScale}\r\n          innerHeight={innerHeight}\r\n          tickFormat={xAxisTickFormat}\r\n          tickOffset={5}\r\n        />\r\n        <text\r\n          className=\"axis-label\"\r\n          textAnchor=\"middle\"\r\n          transform={`translate(${-yAxisLabelOffset},${innerHeight /\r\n            2}) rotate(-90)`}\r\n        >\r\n          {yAxisLabel}\r\n        </text>\r\n        <AxisLeft yScale={yScale} innerWidth={innerWidth} tickOffset={5} />\r\n        <text\r\n          className=\"axis-label\"\r\n          x={innerWidth / 2}\r\n          y={innerHeight + xAxisLabelOffset}\r\n          textAnchor=\"middle\"\r\n        >\r\n          {xAxisLabel}\r\n        </text>\r\n        <Marks\r\n          binnedData={binnedData}\r\n          xScale={xScale}\r\n          yScale={yScale}\r\n          tooltipFormat={d => d}\r\n          circleRadius={2}\r\n          innerHeight={innerHeight}\r\n        />\r\n        <g ref={brushRef} />\r\n      </g>\r\n    </>\r\n  );\r\n};\r\n","import firebase from \"firebase\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyB7S3VnI7PkX557e6INJjpKIwwaWmBnNmw\",\r\n  authDomain: \"sivajs-tf1.firebaseapp.com\",\r\n  projectId: \"sivajs-tf1\",\r\n  storageBucket: \"sivajs-tf1.appspot.com\",\r\n  messagingSenderId: \"128644777641\",\r\n  appId: \"1:128644777641:web:009d5dc9eaadc2c806cbb8\",\r\n  measurementId: \"G-8WS2BH869Z\"\r\n};\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\nconst db = firebaseApp.firestore();\r\n\r\nexport default db;","import React, { useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { useWorldAtlas } from './useWorldAtlas';\r\nimport { useData } from './useData';\r\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport { BubbleMap } from './BubbleMap/index.js';\r\nimport { DateHistogram } from './DateHistogram/index.js';\r\nimport { DateHistogram1 } from './DateHistogram1/index.js';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport GradeIcon from '@material-ui/icons/Grade';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport LaunchIcon from '@material-ui/icons/Launch';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport db from \"./firebase\";\r\nimport './style.css';\r\n\r\nconst width = 960;\r\nconst height = 670;\r\nconst dateHistogramSize = 0.25;\r\n\r\nconst xValue = d => d['Reported Date'];\r\n\r\nconst App = () => {\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      width: '100%',\r\n      '& > * + *': {\r\n        marginTop: theme.spacing(2),\r\n      },\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  const [check,setCheck]= useState(true)\r\n  const [open, setOpen] = useState(false);\r\n  const [rate,setRate]= useState(0)\r\n  const [items,setItems]= useState([{\r\n    name: 'Name',\r\n    value: 'Sivasubramoniam J S'\r\n  },{\r\n    name: 'D.O.B',\r\n    value: '02-June-1997'\r\n  },{\r\n    name: 'Experience',\r\n    value: '2.5 years'\r\n  },{\r\n    name: 'Current Employer',\r\n    value: 'Capgemini'\r\n  },{\r\n    name: 'Designation',\r\n    value: 'Senior Software Engineer'\r\n  },{\r\n    name: <LinkedInIcon style={{width: '40px',height: '40px'}} />,\r\n    value: <a href=\"https://www.linkedin.com/in/sivasubramoniam-j-s-120211164/\"><LaunchIcon /></a>\r\n  }\r\n])\r\n  const worldAtlas = useWorldAtlas();\r\n  const data = useData();\r\n  const [brushExtent, setBrushExtent] = useState();\r\n  \r\n  const [state, setState] = useState({\r\n    top: false,\r\n    left: false,\r\n    bottom: false,\r\n    right: false,\r\n  });\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const adddata = (e) => {\r\n    e.preventDefault();\r\n\r\n    db.collection(\"posts\").add({\r\n      displayName: \"Sajay Js\",\r\n      username: \"siva\",\r\n      verified: true,\r\n    });\r\n}\r\n\r\n  if (!worldAtlas || !data) {\r\n    return (<div className={classes.root}>\r\n      <LinearProgress color=\"secondary\" />\r\n      <p style={{fontSize: \"50px\",paddingTop: \"10vh\"}}>Please wait while we load Data for you</p>\r\n    </div>)\r\n  }\r\n  \r\n  const filteredData = brushExtent ? data.filter(d => {\r\n    const date = xValue(d);\r\n    return date > brushExtent[0] && date < brushExtent[1];\r\n  }) : data;\r\n\r\n  const anchor = 'right';\r\n\r\n  const handleChange = () => {\r\n    setCheck(!check);\r\n  }\r\n  var abc=0;\r\n\r\n  const toggleDrawer = (anchor, open) => (event) => {\r\n    if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n      return;\r\n    }\r\n\r\n    setState({ ...state, [anchor]: open });\r\n  };\r\n\r\n  const handlerate = (e) => {\r\n    for(var i=0;i<5;i++)\r\n    {\r\n      document.getElementsByClassName(\"rate\")[i].style.color = \"darkgray\"\r\n    }\r\n    for(var i=0;i<abc;i++)\r\n    {\r\n      document.getElementsByClassName(\"rate\")[i].style.color = \"rgb(255, 196, 0)\"\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <div className=\"app\" onunload={()=>{alert(\"Do you want to close\")}}>\r\n      <div className=\"app2\">\r\n      <svg width={width} height={height} className=\"pic1\">\r\n        <BubbleMap data={filteredData} worldAtlas={worldAtlas} />\r\n        <g transform={`translate(0, ${height - dateHistogramSize * height})`}>\r\n          {check ? (<DateHistogram\r\n            data={data}\r\n            width={width}\r\n            height={dateHistogramSize * height}\r\n            setBrushExtent={setBrushExtent}\r\n            xValue={xValue}\r\n          />):(<DateHistogram1\r\n            data={data}\r\n            width={width}\r\n            height={dateHistogramSize * height}\r\n            setBrushExtent={setBrushExtent}\r\n            xValue={xValue}/>)}\r\n        </g>\r\n      </svg>\r\n      </div>\r\n      <div className=\"app1\">\r\n          <div className=\"app1_avatar\">\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={toggleDrawer(anchor, true)}\r\n            edge=\"end\"\r\n            >\r\n              <Avatar style={{width:'100px',height:'100px'}} alt=\"Remy Sharp\" src=\"https://pbs.twimg.com/profile_images/562654544954281984/tvO2Pxcl_400x400.png\" />\r\n            </IconButton>\r\n          </div>\r\n          <div className=\"app1a\">\r\n            <Typography>Manual-Slider</Typography>\r\n            <Switch\r\n                checked={check}\r\n                onChange={handleChange}\r\n                inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n              /><Typography>Auto-Slider</Typography>\r\n          </div>\r\n          <div className=\"app1b\">\r\n          <TextField id=\"outlined-basic\" className=\"input1\" label=\"Your Name\"  placeholder=\"Enter your name\" variant=\"outlined\" />\r\n          </div>\r\n          <div className=\"app1b\">\r\n          <TextField id=\"outlined-multiline-static\"  className=\"input2\" label=\"Feedback\" multiline rows={10} placeholder=\"Provide your feedback\" variant=\"outlined\"/>\r\n          </div>\r\n          <div className=\"app1a\" onClick={handlerate}>\r\n            <GradeIcon id=\"1\" className='rate' fontSize='large' onClick={()=>{setRate(1);abc=1}} />\r\n            <GradeIcon id=\"2\" className='rate' fontSize='large' onClick={()=>{setRate(2);abc=2}} />\r\n            <GradeIcon id=\"3\" className='rate' fontSize='large' onClick={()=>{setRate(3);abc=3}} />\r\n            <GradeIcon id=\"4\" className='rate' fontSize='large' onClick={()=>{setRate(4);abc=4}} />\r\n            <GradeIcon id=\"5\" className='rate' fontSize='large' onClick={()=>{setRate(5);abc=5}} />\r\n          </div>\r\n          <div className=\"feed_but\">\r\n          <Button variant=\"outlined\" color=\"secondary\" onClick={adddata}>\r\n          Submit Feedback\r\n          </Button>\r\n          </div>\r\n          </div>\r\n          <React.Fragment key={anchor}>\r\n          <SwipeableDrawer\r\n            anchor={anchor}\r\n            open={state[anchor]}\r\n            onClose={toggleDrawer(anchor, false)}\r\n            onOpen={toggleDrawer(anchor, true)}\r\n          >\r\n        <div className=\"drawer_ic\">\r\n          <IconButton onClick={toggleDrawer(anchor, false)}>\r\n            <ChevronRightIcon />\r\n          </IconButton>\r\n          <div className=\"drawer_header\">\r\n          <Avatar style={{width:'150px',height:'150px'}} alt=\"Remy Sharp\" src=\"https://pbs.twimg.com/profile_images/562654544954281984/tvO2Pxcl_400x400.png\" />\r\n          </div>\r\n            {items.map((items)=>(\r\n          <div className=\"drawer_table\">\r\n          <div className=\"drawer_items\">\r\n            <div className=\"drawer_left\">\r\n                <p>{items.name}</p>\r\n            </div>\r\n            <div className=\"drawer_right\">\r\n                <p>{items.value}</p>\r\n            </div>\r\n          </div>\r\n          <Divider />\r\n        </div>\r\n        ))}\r\n        </div>\r\n        </SwipeableDrawer>\r\n        </React.Fragment>\r\n    </div>\r\n  );\r\n};\r\nconst rootElement = document.getElementById('root');\r\nReactDOM.render(<App />, rootElement);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { json } from 'd3';\r\nimport { feature, mesh } from 'topojson-client';\r\nimport './style.css';\r\nconst jsonUrl = 'https://unpkg.com/world-atlas@2.0.2/countries-50m.json';\r\n\r\nexport const useWorldAtlas = () => {\r\n  const [data, setData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    json(jsonUrl).then(topology => {\r\n      const { countries, land } = topology.objects;\r\n      setData({\r\n        land: feature(topology, land),\r\n        interiors: mesh(topology, countries, (a, b) => a !== b)\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  return data;\r\n};\r\n"],"sourceRoot":""}